application: mass
artifacts:
- name: mart/mass
  reference: mart/mass
  tagVersionStrategy: increasing-tag
  type: docker
environments:
- constraints: []
  name: testing
  notifications: []
  resources:
  - kind: ec2/application-load-balancer@v1.1
    metadata: {}
    spec:
      dependencies:
        securityGroupNames:
        - mass-elb
        - nf-datacenter-elb
      idleTimeout: PT1M
      internal: true
      listeners:
      - defaultActions:
        - order: 1
          redirectConfig:
            host: '#{host}'
            path: /#{path}
            port: "443"
            protocol: HTTPS
            query: '#{query}'
            statusCode: HTTP_302
          type: redirect
        port: 80
        protocol: HTTP
        rules: []
      - certificateArn: arn:aws:iam::179727101194:server-certificate/mass.us-east-1.test.netflix.net-DigiCertSHA2SecureServerCA-20200728-20210728
        defaultActions:
        - order: 1
          targetGroupName: mass-targetgroup
          type: forward
        port: 443
        protocol: HTTPS
        rules: []
      locations:
        account: test
        regions:
        - name: us-east-1
        - name: us-west-2
        - name: eu-west-1
        subnet: internal (vpc0)
        vpc: vpc0
      moniker:
        app: mass
      overrides:
        eu-west-1:
          listeners:
          - defaultActions:
            - order: 1
              redirectConfig:
                host: '#{host}'
                path: /#{path}
                port: "443"
                protocol: HTTPS
                query: '#{query}'
                statusCode: HTTP_302
              type: redirect
            port: 80
            protocol: HTTP
            rules: []
          - certificateArn: arn:aws:iam::179727101194:server-certificate/mass.eu-west-1.test.netflix.net-DigiCertSHA2SecureServerCA-20200728-20210728
            defaultActions:
            - order: 1
              targetGroupName: mass-targetgroup
              type: forward
            port: 443
            protocol: HTTPS
            rules: []
        us-west-2:
          listeners:
          - defaultActions:
            - order: 1
              redirectConfig:
                host: '#{host}'
                path: /#{path}
                port: "443"
                protocol: HTTPS
                query: '#{query}'
                statusCode: HTTP_302
              type: redirect
            port: 80
            protocol: HTTP
            rules: []
          - certificateArn: arn:aws:iam::179727101194:server-certificate/mass.us-west-2.test.netflix.net-DigiCertSHA2SecureServerCA-20200728-20210728
            defaultActions:
            - order: 1
              targetGroupName: mass-targetgroup
              type: forward
            port: 443
            protocol: HTTPS
            rules: []
      targetGroups:
      - attributes:
          deregistrationDelay: 300
          slowStartDurationSeconds: 0
          stickinessDuration: 8400
          stickinessEnabled: false
          stickinessType: lb_cookie
        healthCheckEnabled: true
        healthCheckHttpCode: 200-299
        healthCheckInterval: PT10S
        healthCheckPath: /healthcheck
        healthCheckPort: 7001
        healthCheckProtocol: HTTP
        healthCheckTimeout: PT5S
        healthyThresholdCount: 10
        name: mass-targetgroup
        port: 7001
        protocol: HTTP
        targetType: ip
        unhealthyThresholdCount: 2
  - kind: titus/cluster@v1
    metadata: {}
    spec:
      capacity:
        desired: 4
        max: 4
        min: 4
      constraints:
        hard: {}
        soft: {}
      container:
        reference: mart/mass
      dependencies:
        securityGroupNames:
        - nf-infrastructure
        - mass
        - nf-datacenter
        targetGroups:
        - mass-targetgroup
      deployWith:
        strategy: red-black
        waitForInstancesUp: PT30M
      env:
        MASS_DB_HOST: crdb_mart.cluster.us-east-1.cdetest.netflix.net
        MASS_DB_PORT: "7001"
      locations:
        account: titustestvpc
        regions:
        - name: us-east-1
        - name: us-west-2
        - name: eu-west-1
        vpc: vpc0
      moniker:
        app: mass
      overrides:
        eu-west-1:
          env:
            MASS_DB_HOST: crdb_mart.cluster.eu-west-1.cdetest.netflix.net
            MASS_DB_PORT: "7001"
        us-west-2:
          env:
            MASS_DB_HOST: crdb_mart.cluster.us-west-2.cdetest.netflix.net
            MASS_DB_PORT: "7001"
  - kind: ec2/security-group@v1
    metadata: {}
    spec:
      description: Security Group for mass
      inboundRules:
      - name: mass-elb
        portRange:
          endPort: 7001
          startPort: 7001
        protocol: TCP
      - name: nf-datacenter
        portRange:
          endPort: 7001
          startPort: 7001
        protocol: TCP
      locations:
        account: test
        regions:
        - name: us-east-1
        - name: us-west-2
        - name: eu-west-1
        vpc: vpc0
      moniker:
        app: mass
  - kind: ec2/security-group@v1
    metadata: {}
    spec:
      description: Application ELB Security Group for mass
      inboundRules:
      - blockRange: 50.112.119.144/29
        portRange:
          endPort: 80
          startPort: 80
        protocol: TCP
      - blockRange: 100.97.0.0/16
        portRange:
          endPort: 80
          startPort: 80
        protocol: TCP
      - blockRange: 54.77.255.220/30
        portRange:
          endPort: 80
          startPort: 80
        protocol: TCP
      - blockRange: 50.19.255.104/29
        portRange:
          endPort: 80
          startPort: 80
        protocol: TCP
      - blockRange: 100.78.0.0/16
        portRange:
          endPort: 80
          startPort: 80
        protocol: TCP
      - blockRange: 2600:1f1f:4b2:3a00::/56
        portRange:
          endPort: 80
          startPort: 80
        protocol: TCP
      - blockRange: 2600:1f18:2772:d500::/56
        portRange:
          endPort: 80
          startPort: 80
        protocol: TCP
      - blockRange: 100.122.0.0/16
        portRange:
          endPort: 80
          startPort: 80
        protocol: TCP
      - blockRange: 2600:1f1c:adb:5a00::/56
        portRange:
          endPort: 80
          startPort: 80
        protocol: TCP
      - blockRange: 2a05:d018:5a2:c100::/56
        portRange:
          endPort: 80
          startPort: 80
        protocol: TCP
      - blockRange: 100.66.96.0/19
        portRange:
          endPort: 80
          startPort: 80
        protocol: TCP
      - blockRange: 100.66.0.0/18
        portRange:
          endPort: 80
          startPort: 80
        protocol: TCP
      - blockRange: 100.79.0.0/16
        portRange:
          endPort: 80
          startPort: 80
        protocol: TCP
      - blockRange: 54.219.190.220/30
        portRange:
          endPort: 80
          startPort: 80
        protocol: TCP
      - blockRange: 100.65.0.0/16
        portRange:
          endPort: 80
          startPort: 80
        protocol: TCP
      - blockRange: 54.213.255.128/30
        portRange:
          endPort: 80
          startPort: 80
        protocol: TCP
      - blockRange: 100.96.0.0/16
        portRange:
          endPort: 80
          startPort: 80
        protocol: TCP
      - blockRange: 46.137.166.216/29
        portRange:
          endPort: 80
          startPort: 80
        protocol: TCP
      - blockRange: 54.165.127.252/30
        portRange:
          endPort: 80
          startPort: 80
        protocol: TCP
      - blockRange: 50.18.51.216/29
        portRange:
          endPort: 80
          startPort: 80
        protocol: TCP
      - blockRange: 100.98.0.0/16
        portRange:
          endPort: 80
          startPort: 80
        protocol: TCP
      - blockRange: 100.66.128.0/19
        portRange:
          endPort: 80
          startPort: 80
        protocol: TCP
      - blockRange: 100.66.64.0/19
        portRange:
          endPort: 80
          startPort: 80
        protocol: TCP
      - blockRange: 2a05:d018:b6e:4f00::/56
        portRange:
          endPort: 80
          startPort: 80
        protocol: TCP
      - blockRange: 2600:1f14:d64:1a00::/56
        portRange:
          endPort: 80
          startPort: 80
        protocol: TCP
      locations:
        account: test
        regions:
        - name: us-east-1
        - name: us-west-2
        - name: eu-west-1
        vpc: vpc0
      moniker:
        app: mass
        stack: elb
serviceAccount: managed-artifacts@netflix.com
